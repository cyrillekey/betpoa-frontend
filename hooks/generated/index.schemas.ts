/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Betpoa Documentation
 * Betpoa Betting Rest Api Documentation
 * OpenAPI spec version: 1.0.0
 */
/**
 * Default response
 */
export type PostUserWithdrawalDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserWithdrawal500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserWithdrawal404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserWithdrawal403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserWithdrawal401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserWithdrawal400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PostUserWithdrawal200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostUserWithdrawalBody = {
  amount: number;
};

/**
 * Default response
 */
export type PostUserDepositDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserDeposit500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserDeposit404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserDeposit403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserDeposit401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserDeposit400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PostUserDeposit200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostUserDepositBody = {
  /** Amount to deposit. Must be greater than 10 */
  amount: number;
  /** Mpesa phone number to deposit from */
  phone: string;
};

/**
 * Default response
 */
export type PutUserpasswordupdateDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PutUserpasswordupdate500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PutUserpasswordupdate404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PutUserpasswordupdate403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PutUserpasswordupdate401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PutUserpasswordupdate400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PutUserpasswordupdate200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PutUserpasswordupdateBody = {
  /** Password reset otp */
  otp: string;
  /** New Password */
  password: string;
  /** User Phone Number */
  phone: string;
};

/**
 * Default response
 */
export type PutUserDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PutUser500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PutUser404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PutUser403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PutUser401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PutUser400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PutUser200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PutUserBodyAvatar = {
  filename?: string;
  fileType?: string;
  link?: string;
};

export type PutUserBody = {
  avatar?: PutUserBodyAvatar;
  email?: string;
  fname?: string;
  lname?: string;
};

/**
 * Default response
 */
export type PostUserPasswordresetDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserPasswordreset500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserPasswordreset404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserPasswordreset403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserPasswordreset401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserPasswordreset400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PostUserPasswordreset200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostUserPasswordresetBody = {
  phone: string;
};

/**
 * Default response
 */
export type PostUserVerifyUserDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserVerifyUser500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserVerifyUser404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserVerifyUser403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserVerifyUser401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserVerifyUser400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PostUserVerifyUser200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostUserVerifyUserBody = {
  otp: string;
};

/**
 * Default response
 */
export type PostUserOtpDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserOtp500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserOtp404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserOtp403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserOtp401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserOtp400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PostUserOtp200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Default response
 */
export type PostUserLoginDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserLogin500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserLogin404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserLogin403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserLogin401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserLogin400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostUserLogin200User = {
  id?: number;
  phone?: string;
  phoneValidated?: boolean;
  profileId?: number;
  role?: string;
};

/**
 * Successful response
 */
export type PostUserLogin200 = {
  id?: number;
  message?: string;
  success?: boolean;
  token?: string;
  user?: PostUserLogin200User;
};

export type PostUserLoginBody = {
  password: string;
  phone: string;
};

/**
 * Default response
 */
export type PostUserSignupDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostUserSignup500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserSignup404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserSignup403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostUserSignup401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostUserSignup400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostUserSignup201User = {
  id?: number;
  phone?: string;
  phoneValidated?: boolean;
  profileId?: number;
  role?: string;
};

/**
 * Successful response
 */
export type PostUserSignup201 = {
  id?: number;
  message?: string;
  success?: boolean;
  token?: string;
  user?: PostUserSignup201User;
};

export type PostUserSignupBody = {
  password: string;
  phone: string;
};

export type GetFixturesFeaturedDefaultDataStatus = typeof GetFixturesFeaturedDefaultDataStatus[keyof typeof GetFixturesFeaturedDefaultDataStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesFeaturedDefaultDataStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesFeaturedDefaultData = {
  awayTeam?: GetFixturesFeaturedDefaultDataAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesFeaturedDefaultDataFixtureResult;
  homeTeam?: GetFixturesFeaturedDefaultDataHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesFeaturedDefaultDataLeague;
  leagueId?: number;
  odds?: GetFixturesFeaturedDefaultDataOddsItem[];
  referee?: string;
  result?: GetFixturesFeaturedDefaultDataResult;
  shortStatus?: string;
  status?: GetFixturesFeaturedDefaultDataStatus;
  updatedAt?: string;
};

export type GetFixturesFeaturedDefault = {
  data?: GetFixturesFeaturedDefaultData;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesFeaturedDefaultDataResultHtHomeGoals = null | number;

export type GetFixturesFeaturedDefaultDataResultHtAwayGoals = null | number;

export type GetFixturesFeaturedDefaultDataResultHomeGoals = null | number;

export type GetFixturesFeaturedDefaultDataResultExtraHomeGoals = null | number;

export type GetFixturesFeaturedDefaultDataResultExtraAwayGoals = null | number;

export type GetFixturesFeaturedDefaultDataResultAwayGoals = null | number;

export type GetFixturesFeaturedDefaultDataResult = {
  awayGoals?: GetFixturesFeaturedDefaultDataResultAwayGoals;
  extraAwayGoals?: GetFixturesFeaturedDefaultDataResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesFeaturedDefaultDataResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesFeaturedDefaultDataResultHomeGoals;
  htAwayGoals?: GetFixturesFeaturedDefaultDataResultHtAwayGoals;
  htHomeGoals?: GetFixturesFeaturedDefaultDataResultHtHomeGoals;
  id?: number;
};

export type GetFixturesFeaturedDefaultDataOddsItemType = typeof GetFixturesFeaturedDefaultDataOddsItemType[keyof typeof GetFixturesFeaturedDefaultDataOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesFeaturedDefaultDataOddsItemType = {
  '': '',
} as const;

export type GetFixturesFeaturedDefaultDataOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesFeaturedDefaultDataOddsItemType;
  value?: number;
};

export type GetFixturesFeaturedDefaultDataLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesFeaturedDefaultDataHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesFeaturedDefaultDataFixtureResult = typeof GetFixturesFeaturedDefaultDataFixtureResult[keyof typeof GetFixturesFeaturedDefaultDataFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesFeaturedDefaultDataFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesFeaturedDefaultDataAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

/**
 * Server error
 */
export type GetFixturesFeatured500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesFeatured404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesFeatured403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesFeatured401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetFixturesFeatured400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesFeatured200DataStatus = typeof GetFixturesFeatured200DataStatus[keyof typeof GetFixturesFeatured200DataStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesFeatured200DataStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesFeatured200DataResultHtHomeGoals = null | number;

export type GetFixturesFeatured200DataResultHtAwayGoals = null | number;

export type GetFixturesFeatured200DataResultHomeGoals = null | number;

export type GetFixturesFeatured200DataResultExtraHomeGoals = null | number;

export type GetFixturesFeatured200DataResultExtraAwayGoals = null | number;

export type GetFixturesFeatured200DataResultAwayGoals = null | number;

export type GetFixturesFeatured200DataResult = {
  awayGoals?: GetFixturesFeatured200DataResultAwayGoals;
  extraAwayGoals?: GetFixturesFeatured200DataResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesFeatured200DataResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesFeatured200DataResultHomeGoals;
  htAwayGoals?: GetFixturesFeatured200DataResultHtAwayGoals;
  htHomeGoals?: GetFixturesFeatured200DataResultHtHomeGoals;
  id?: number;
};

export type GetFixturesFeatured200DataOddsItemType = typeof GetFixturesFeatured200DataOddsItemType[keyof typeof GetFixturesFeatured200DataOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesFeatured200DataOddsItemType = {
  '': '',
} as const;

export type GetFixturesFeatured200DataOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesFeatured200DataOddsItemType;
  value?: number;
};

export type GetFixturesFeatured200DataLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesFeatured200DataHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesFeatured200DataFixtureResult = typeof GetFixturesFeatured200DataFixtureResult[keyof typeof GetFixturesFeatured200DataFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesFeatured200DataFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesFeatured200DataAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesFeatured200Data = {
  awayTeam?: GetFixturesFeatured200DataAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesFeatured200DataFixtureResult;
  homeTeam?: GetFixturesFeatured200DataHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesFeatured200DataLeague;
  leagueId?: number;
  odds?: GetFixturesFeatured200DataOddsItem[];
  referee?: string;
  result?: GetFixturesFeatured200DataResult;
  shortStatus?: string;
  status?: GetFixturesFeatured200DataStatus;
  updatedAt?: string;
};

export type GetFixturesFeatured200 = {
  data?: GetFixturesFeatured200Data;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesOddsIdDefaultDataItemType = typeof GetFixturesOddsIdDefaultDataItemType[keyof typeof GetFixturesOddsIdDefaultDataItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesOddsIdDefaultDataItemType = {
  '': '',
} as const;

export type GetFixturesOddsIdDefaultDataItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesOddsIdDefaultDataItemType;
  value?: number;
};

export type GetFixturesOddsIdDefault = {
  data?: GetFixturesOddsIdDefaultDataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type GetFixturesOddsId500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesOddsId404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesOddsId403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesOddsId401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetFixturesOddsId400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesOddsId200DataItemType = typeof GetFixturesOddsId200DataItemType[keyof typeof GetFixturesOddsId200DataItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesOddsId200DataItemType = {
  '': '',
} as const;

export type GetFixturesOddsId200DataItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesOddsId200DataItemType;
  value?: number;
};

export type GetFixturesOddsId200 = {
  data?: GetFixturesOddsId200DataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesResultIdDefaultDataHtHomeGoals = null | number;

export type GetFixturesResultIdDefaultDataHtAwayGoals = null | number;

export type GetFixturesResultIdDefaultDataHomeGoals = null | number;

export type GetFixturesResultIdDefaultDataExtraHomeGoals = null | number;

export type GetFixturesResultIdDefaultDataExtraAwayGoals = null | number;

export type GetFixturesResultIdDefaultDataAwayGoals = null | number;

export type GetFixturesResultIdDefaultData = {
  awayGoals?: GetFixturesResultIdDefaultDataAwayGoals;
  extraAwayGoals?: GetFixturesResultIdDefaultDataExtraAwayGoals;
  extraHomeGoals?: GetFixturesResultIdDefaultDataExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesResultIdDefaultDataHomeGoals;
  htAwayGoals?: GetFixturesResultIdDefaultDataHtAwayGoals;
  htHomeGoals?: GetFixturesResultIdDefaultDataHtHomeGoals;
  id?: number;
};

export type GetFixturesResultIdDefault = {
  data?: GetFixturesResultIdDefaultData;
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type GetFixturesResultId500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesResultId404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesResultId403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesResultId401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetFixturesResultId400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesResultId200 = {
  data?: GetFixturesResultId200Data;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesResultId200DataHtHomeGoals = null | number;

export type GetFixturesResultId200DataHtAwayGoals = null | number;

export type GetFixturesResultId200DataHomeGoals = null | number;

export type GetFixturesResultId200DataExtraHomeGoals = null | number;

export type GetFixturesResultId200DataExtraAwayGoals = null | number;

export type GetFixturesResultId200DataAwayGoals = null | number;

export type GetFixturesResultId200Data = {
  awayGoals?: GetFixturesResultId200DataAwayGoals;
  extraAwayGoals?: GetFixturesResultId200DataExtraAwayGoals;
  extraHomeGoals?: GetFixturesResultId200DataExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesResultId200DataHomeGoals;
  htAwayGoals?: GetFixturesResultId200DataHtAwayGoals;
  htHomeGoals?: GetFixturesResultId200DataHtHomeGoals;
  id?: number;
};

export type GetFixturesIdDefault = {
  data?: GetFixturesIdDefaultData;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesIdDefaultDataStatus = typeof GetFixturesIdDefaultDataStatus[keyof typeof GetFixturesIdDefaultDataStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesIdDefaultDataStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesIdDefaultDataResultHtHomeGoals = null | number;

export type GetFixturesIdDefaultDataResultHtAwayGoals = null | number;

export type GetFixturesIdDefaultDataResultHomeGoals = null | number;

export type GetFixturesIdDefaultDataResultExtraHomeGoals = null | number;

export type GetFixturesIdDefaultDataResultExtraAwayGoals = null | number;

export type GetFixturesIdDefaultDataResultAwayGoals = null | number;

export type GetFixturesIdDefaultDataResult = {
  awayGoals?: GetFixturesIdDefaultDataResultAwayGoals;
  extraAwayGoals?: GetFixturesIdDefaultDataResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesIdDefaultDataResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesIdDefaultDataResultHomeGoals;
  htAwayGoals?: GetFixturesIdDefaultDataResultHtAwayGoals;
  htHomeGoals?: GetFixturesIdDefaultDataResultHtHomeGoals;
  id?: number;
};

export type GetFixturesIdDefaultDataOddsItemType = typeof GetFixturesIdDefaultDataOddsItemType[keyof typeof GetFixturesIdDefaultDataOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesIdDefaultDataOddsItemType = {
  '': '',
} as const;

export type GetFixturesIdDefaultDataOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesIdDefaultDataOddsItemType;
  value?: number;
};

export type GetFixturesIdDefaultDataLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesIdDefaultDataHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesIdDefaultDataFixtureResult = typeof GetFixturesIdDefaultDataFixtureResult[keyof typeof GetFixturesIdDefaultDataFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesIdDefaultDataFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesIdDefaultDataAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesIdDefaultData = {
  awayTeam?: GetFixturesIdDefaultDataAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesIdDefaultDataFixtureResult;
  homeTeam?: GetFixturesIdDefaultDataHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesIdDefaultDataLeague;
  leagueId?: number;
  odds?: GetFixturesIdDefaultDataOddsItem[];
  referee?: string;
  result?: GetFixturesIdDefaultDataResult;
  shortStatus?: string;
  status?: GetFixturesIdDefaultDataStatus;
  updatedAt?: string;
};

/**
 * Server error
 */
export type GetFixturesId500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesId404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesId403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesId401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetFixturesId400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesId200DataStatus = typeof GetFixturesId200DataStatus[keyof typeof GetFixturesId200DataStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesId200DataStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesId200Data = {
  awayTeam?: GetFixturesId200DataAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesId200DataFixtureResult;
  homeTeam?: GetFixturesId200DataHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesId200DataLeague;
  leagueId?: number;
  odds?: GetFixturesId200DataOddsItem[];
  referee?: string;
  result?: GetFixturesId200DataResult;
  shortStatus?: string;
  status?: GetFixturesId200DataStatus;
  updatedAt?: string;
};

export type GetFixturesId200 = {
  data?: GetFixturesId200Data;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesId200DataResultHtHomeGoals = null | number;

export type GetFixturesId200DataResultHtAwayGoals = null | number;

export type GetFixturesId200DataResultHomeGoals = null | number;

export type GetFixturesId200DataResultExtraHomeGoals = null | number;

export type GetFixturesId200DataResultExtraAwayGoals = null | number;

export type GetFixturesId200DataResultAwayGoals = null | number;

export type GetFixturesId200DataResult = {
  awayGoals?: GetFixturesId200DataResultAwayGoals;
  extraAwayGoals?: GetFixturesId200DataResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesId200DataResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesId200DataResultHomeGoals;
  htAwayGoals?: GetFixturesId200DataResultHtAwayGoals;
  htHomeGoals?: GetFixturesId200DataResultHtHomeGoals;
  id?: number;
};

export type GetFixturesId200DataOddsItemType = typeof GetFixturesId200DataOddsItemType[keyof typeof GetFixturesId200DataOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesId200DataOddsItemType = {
  '': '',
} as const;

export type GetFixturesId200DataOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesId200DataOddsItemType;
  value?: number;
};

export type GetFixturesId200DataLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesId200DataHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesId200DataFixtureResult = typeof GetFixturesId200DataFixtureResult[keyof typeof GetFixturesId200DataFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesId200DataFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesId200DataAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesBettingDefaultDataItemStatus = typeof GetFixturesBettingDefaultDataItemStatus[keyof typeof GetFixturesBettingDefaultDataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBettingDefaultDataItemStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesBettingDefaultDataItemResultHtHomeGoals = null | number;

export type GetFixturesBettingDefaultDataItemResultHtAwayGoals = null | number;

export type GetFixturesBettingDefaultDataItemResultHomeGoals = null | number;

export type GetFixturesBettingDefaultDataItemResultExtraHomeGoals = null | number;

export type GetFixturesBettingDefaultDataItemResultExtraAwayGoals = null | number;

export type GetFixturesBettingDefaultDataItemResultAwayGoals = null | number;

export type GetFixturesBettingDefaultDataItemResult = {
  awayGoals?: GetFixturesBettingDefaultDataItemResultAwayGoals;
  extraAwayGoals?: GetFixturesBettingDefaultDataItemResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesBettingDefaultDataItemResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesBettingDefaultDataItemResultHomeGoals;
  htAwayGoals?: GetFixturesBettingDefaultDataItemResultHtAwayGoals;
  htHomeGoals?: GetFixturesBettingDefaultDataItemResultHtHomeGoals;
  id?: number;
};

export type GetFixturesBettingDefaultDataItemOddsItemType = typeof GetFixturesBettingDefaultDataItemOddsItemType[keyof typeof GetFixturesBettingDefaultDataItemOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBettingDefaultDataItemOddsItemType = {
  '': '',
} as const;

export type GetFixturesBettingDefaultDataItemOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesBettingDefaultDataItemOddsItemType;
  value?: number;
};

export type GetFixturesBettingDefaultDataItemLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesBettingDefaultDataItemHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesBettingDefaultDataItemFixtureResult = typeof GetFixturesBettingDefaultDataItemFixtureResult[keyof typeof GetFixturesBettingDefaultDataItemFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBettingDefaultDataItemFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesBettingDefaultDataItemAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesBettingDefaultDataItem = {
  awayTeam?: GetFixturesBettingDefaultDataItemAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesBettingDefaultDataItemFixtureResult;
  homeTeam?: GetFixturesBettingDefaultDataItemHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesBettingDefaultDataItemLeague;
  leagueId?: number;
  odds?: GetFixturesBettingDefaultDataItemOddsItem[];
  referee?: string;
  result?: GetFixturesBettingDefaultDataItemResult;
  shortStatus?: string;
  status?: GetFixturesBettingDefaultDataItemStatus;
  updatedAt?: string;
};

export type GetFixturesBettingDefault = {
  data?: GetFixturesBettingDefaultDataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type GetFixturesBetting500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesBetting404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesBetting403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixturesBetting401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetFixturesBetting400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesBetting200DataItemStatus = typeof GetFixturesBetting200DataItemStatus[keyof typeof GetFixturesBetting200DataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBetting200DataItemStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesBetting200DataItem = {
  awayTeam?: GetFixturesBetting200DataItemAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesBetting200DataItemFixtureResult;
  homeTeam?: GetFixturesBetting200DataItemHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesBetting200DataItemLeague;
  leagueId?: number;
  odds?: GetFixturesBetting200DataItemOddsItem[];
  referee?: string;
  result?: GetFixturesBetting200DataItemResult;
  shortStatus?: string;
  status?: GetFixturesBetting200DataItemStatus;
  updatedAt?: string;
};

export type GetFixturesBetting200 = {
  data?: GetFixturesBetting200DataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesBetting200DataItemResultHtHomeGoals = null | number;

export type GetFixturesBetting200DataItemResultHtAwayGoals = null | number;

export type GetFixturesBetting200DataItemResultHomeGoals = null | number;

export type GetFixturesBetting200DataItemResultExtraHomeGoals = null | number;

export type GetFixturesBetting200DataItemResultExtraAwayGoals = null | number;

export type GetFixturesBetting200DataItemResultAwayGoals = null | number;

export type GetFixturesBetting200DataItemResult = {
  awayGoals?: GetFixturesBetting200DataItemResultAwayGoals;
  extraAwayGoals?: GetFixturesBetting200DataItemResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesBetting200DataItemResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesBetting200DataItemResultHomeGoals;
  htAwayGoals?: GetFixturesBetting200DataItemResultHtAwayGoals;
  htHomeGoals?: GetFixturesBetting200DataItemResultHtHomeGoals;
  id?: number;
};

export type GetFixturesBetting200DataItemOddsItemType = typeof GetFixturesBetting200DataItemOddsItemType[keyof typeof GetFixturesBetting200DataItemOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBetting200DataItemOddsItemType = {
  '': '',
} as const;

export type GetFixturesBetting200DataItemOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesBetting200DataItemOddsItemType;
  value?: number;
};

export type GetFixturesBetting200DataItemLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesBetting200DataItemHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesBetting200DataItemFixtureResult = typeof GetFixturesBetting200DataItemFixtureResult[keyof typeof GetFixturesBetting200DataItemFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBetting200DataItemFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesBetting200DataItemAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesBettingStatus = typeof GetFixturesBettingStatus[keyof typeof GetFixturesBettingStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesBettingStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesBettingParams = {
fromDate?: string;
toDate?: string;
pageSize?: number;
page?: number;
/**
 * League ids separated by dash. E.g 1-2-3-4
 */
leagueIds?: string;
country?: string;
/**
 * Team ids separated by dash. E.g 1-2-3-4
 */
teamsId?: string;
status?: GetFixturesBettingStatus;
};

export type GetFixturesDefault = {
  data?: GetFixturesDefaultDataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixturesDefaultDataItemStatus = typeof GetFixturesDefaultDataItemStatus[keyof typeof GetFixturesDefaultDataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesDefaultDataItemStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesDefaultDataItemResultHtHomeGoals = null | number;

export type GetFixturesDefaultDataItemResultHtAwayGoals = null | number;

export type GetFixturesDefaultDataItemResultHomeGoals = null | number;

export type GetFixturesDefaultDataItemResultExtraHomeGoals = null | number;

export type GetFixturesDefaultDataItemResultExtraAwayGoals = null | number;

export type GetFixturesDefaultDataItemResultAwayGoals = null | number;

export type GetFixturesDefaultDataItemResult = {
  awayGoals?: GetFixturesDefaultDataItemResultAwayGoals;
  extraAwayGoals?: GetFixturesDefaultDataItemResultExtraAwayGoals;
  extraHomeGoals?: GetFixturesDefaultDataItemResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixturesDefaultDataItemResultHomeGoals;
  htAwayGoals?: GetFixturesDefaultDataItemResultHtAwayGoals;
  htHomeGoals?: GetFixturesDefaultDataItemResultHtHomeGoals;
  id?: number;
};

export type GetFixturesDefaultDataItemOddsItemType = typeof GetFixturesDefaultDataItemOddsItemType[keyof typeof GetFixturesDefaultDataItemOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesDefaultDataItemOddsItemType = {
  '': '',
} as const;

export type GetFixturesDefaultDataItemOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixturesDefaultDataItemOddsItemType;
  value?: number;
};

export type GetFixturesDefaultDataItemLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixturesDefaultDataItemHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesDefaultDataItemFixtureResult = typeof GetFixturesDefaultDataItemFixtureResult[keyof typeof GetFixturesDefaultDataItemFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesDefaultDataItemFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixturesDefaultDataItemAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesDefaultDataItem = {
  awayTeam?: GetFixturesDefaultDataItemAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixturesDefaultDataItemFixtureResult;
  homeTeam?: GetFixturesDefaultDataItemHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixturesDefaultDataItemLeague;
  leagueId?: number;
  odds?: GetFixturesDefaultDataItemOddsItem[];
  referee?: string;
  result?: GetFixturesDefaultDataItemResult;
  shortStatus?: string;
  status?: GetFixturesDefaultDataItemStatus;
  updatedAt?: string;
};

/**
 * Server error
 */
export type GetFixtures500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixtures404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixtures403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetFixtures401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetFixtures400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixtures200DataItemStatus = typeof GetFixtures200DataItemStatus[keyof typeof GetFixtures200DataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixtures200DataItemStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixtures200DataItem = {
  awayTeam?: GetFixtures200DataItemAwayTeam;
  awayTeamId?: number;
  createdAt?: string;
  date?: string;
  featured?: boolean;
  fixtureId?: number;
  fixtureResult?: GetFixtures200DataItemFixtureResult;
  homeTeam?: GetFixtures200DataItemHomeTeam;
  homeTeamId?: number;
  id?: number;
  league?: GetFixtures200DataItemLeague;
  leagueId?: number;
  odds?: GetFixtures200DataItemOddsItem[];
  referee?: string;
  result?: GetFixtures200DataItemResult;
  shortStatus?: string;
  status?: GetFixtures200DataItemStatus;
  updatedAt?: string;
};

export type GetFixtures200 = {
  data?: GetFixtures200DataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetFixtures200DataItemResultHtHomeGoals = null | number;

export type GetFixtures200DataItemResultHtAwayGoals = null | number;

export type GetFixtures200DataItemResultHomeGoals = null | number;

export type GetFixtures200DataItemResultExtraHomeGoals = null | number;

export type GetFixtures200DataItemResultExtraAwayGoals = null | number;

export type GetFixtures200DataItemResultAwayGoals = null | number;

export type GetFixtures200DataItemResult = {
  awayGoals?: GetFixtures200DataItemResultAwayGoals;
  extraAwayGoals?: GetFixtures200DataItemResultExtraAwayGoals;
  extraHomeGoals?: GetFixtures200DataItemResultExtraHomeGoals;
  fixtureId?: number;
  homeGoals?: GetFixtures200DataItemResultHomeGoals;
  htAwayGoals?: GetFixtures200DataItemResultHtAwayGoals;
  htHomeGoals?: GetFixtures200DataItemResultHtHomeGoals;
  id?: number;
};

export type GetFixtures200DataItemOddsItemType = typeof GetFixtures200DataItemOddsItemType[keyof typeof GetFixtures200DataItemOddsItemType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixtures200DataItemOddsItemType = {
  '': '',
} as const;

export type GetFixtures200DataItemOddsItem = {
  fixtureId?: string;
  id?: number;
  name?: string;
  odd?: number;
  type?: GetFixtures200DataItemOddsItemType;
  value?: number;
};

export type GetFixtures200DataItemLeague = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

export type GetFixtures200DataItemHomeTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixtures200DataItemFixtureResult = typeof GetFixtures200DataItemFixtureResult[keyof typeof GetFixtures200DataItemFixtureResult];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixtures200DataItemFixtureResult = {
  HOME: 'HOME',
  AWAY: 'AWAY',
  DRAW: 'DRAW',
  NP: 'NP',
} as const;

export type GetFixtures200DataItemAwayTeam = {
  code?: string;
  createdAt?: string;
  id?: number;
  logo?: string;
  name?: string;
  teamId?: number;
  updatedAt?: string;
  venue?: string;
};

export type GetFixturesStatus = typeof GetFixturesStatus[keyof typeof GetFixturesStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetFixturesStatus = {
  FINISHED: 'FINISHED',
  UPCOMMING: 'UPCOMMING',
  ABANDONED: 'ABANDONED',
  INPLAY: 'INPLAY',
  CANCELLED: 'CANCELLED',
} as const;

export type GetFixturesParams = {
fromDate?: string;
toDate?: string;
pageSize?: number;
page?: number;
/**
 * League ids separated by dash. E.g 1-2-3-4
 */
leagueIds?: string;
country?: string;
/**
 * Team ids separated by dash. E.g 1-2-3-4
 */
teamsId?: string;
status?: GetFixturesStatus;
};

export type GetBettingIdItemsDefaultDataItemStatus = typeof GetBettingIdItemsDefaultDataItemStatus[keyof typeof GetBettingIdItemsDefaultDataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingIdItemsDefaultDataItemStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingIdItemsDefaultDataItem = {
  betId?: number;
  betOdd?: number;
  createdAt?: string;
  id?: number;
  oddId?: number;
  pick?: string;
  status?: GetBettingIdItemsDefaultDataItemStatus;
  updatedAt?: string;
};

/**
 * SuccessReponse
 */
export type GetBettingIdItemsDefault = {
  data?: GetBettingIdItemsDefaultDataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type GetBettingIdItems500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBettingIdItems404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBettingIdItems403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBettingIdItems401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetBettingIdItems400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBettingIdItems200DataItemStatus = typeof GetBettingIdItems200DataItemStatus[keyof typeof GetBettingIdItems200DataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingIdItems200DataItemStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingIdItems200DataItem = {
  betId?: number;
  betOdd?: number;
  createdAt?: string;
  id?: number;
  oddId?: number;
  pick?: string;
  status?: GetBettingIdItems200DataItemStatus;
  updatedAt?: string;
};

/**
 * SuccessReponse
 */
export type GetBettingIdItems200 = {
  data?: GetBettingIdItems200DataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * SuccessReponse
 */
export type GetBettingIdDefault = {
  data?: GetBettingIdDefaultData;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBettingIdDefaultDataStatus = typeof GetBettingIdDefaultDataStatus[keyof typeof GetBettingIdDefaultDataStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingIdDefaultDataStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingIdDefaultDataMarketsStatus = typeof GetBettingIdDefaultDataMarketsStatus[keyof typeof GetBettingIdDefaultDataMarketsStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingIdDefaultDataMarketsStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingIdDefaultDataMarkets = {
  betId?: number;
  betOdd?: number;
  createdAt?: string;
  id?: number;
  oddId?: number;
  pick?: string;
  status?: GetBettingIdDefaultDataMarketsStatus;
  updatedAt?: string;
};

export type GetBettingIdDefaultData = {
  amountPlaced?: number;
  createdAt?: string;
  date?: string;
  id?: number;
  markets?: GetBettingIdDefaultDataMarkets;
  possibleWin?: number;
  status?: GetBettingIdDefaultDataStatus;
  totalMarkets?: number;
  totalOdds?: number;
  updatedAt?: string;
  userId?: string;
};

/**
 * Server error
 */
export type GetBettingId500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBettingId404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBettingId403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBettingId401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetBettingId400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBettingId200DataStatus = typeof GetBettingId200DataStatus[keyof typeof GetBettingId200DataStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingId200DataStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingId200Data = {
  amountPlaced?: number;
  createdAt?: string;
  date?: string;
  id?: number;
  markets?: GetBettingId200DataMarkets;
  possibleWin?: number;
  status?: GetBettingId200DataStatus;
  totalMarkets?: number;
  totalOdds?: number;
  updatedAt?: string;
  userId?: string;
};

/**
 * SuccessReponse
 */
export type GetBettingId200 = {
  data?: GetBettingId200Data;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBettingId200DataMarketsStatus = typeof GetBettingId200DataMarketsStatus[keyof typeof GetBettingId200DataMarketsStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingId200DataMarketsStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingId200DataMarkets = {
  betId?: number;
  betOdd?: number;
  createdAt?: string;
  id?: number;
  oddId?: number;
  pick?: string;
  status?: GetBettingId200DataMarketsStatus;
  updatedAt?: string;
};

/**
 * SuccessReponse
 */
export type DeleteBettingIdDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type DeleteBettingId500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type DeleteBettingId404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type DeleteBettingId403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type DeleteBettingId401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type DeleteBettingId400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * SuccessReponse
 */
export type DeleteBettingId200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBettingDefaultDataItemStatus = typeof GetBettingDefaultDataItemStatus[keyof typeof GetBettingDefaultDataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingDefaultDataItemStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingDefaultDataItem = {
  amountPlaced?: number;
  createdAt?: string;
  date?: string;
  id?: number;
  markets?: GetBettingDefaultDataItemMarkets;
  possibleWin?: number;
  status?: GetBettingDefaultDataItemStatus;
  totalMarkets?: number;
  totalOdds?: number;
  updatedAt?: string;
  userId?: string;
};

/**
 * SuccessReponse
 */
export type GetBettingDefault = {
  data?: GetBettingDefaultDataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBettingDefaultDataItemMarketsStatus = typeof GetBettingDefaultDataItemMarketsStatus[keyof typeof GetBettingDefaultDataItemMarketsStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingDefaultDataItemMarketsStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBettingDefaultDataItemMarkets = {
  betId?: number;
  betOdd?: number;
  createdAt?: string;
  id?: number;
  oddId?: number;
  pick?: string;
  status?: GetBettingDefaultDataItemMarketsStatus;
  updatedAt?: string;
};

/**
 * Server error
 */
export type GetBetting500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBetting404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBetting403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetBetting401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetBetting400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * SuccessReponse
 */
export type GetBetting200 = {
  data?: GetBetting200DataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetBetting200DataItemStatus = typeof GetBetting200DataItemStatus[keyof typeof GetBetting200DataItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBetting200DataItemStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBetting200DataItemMarketsStatus = typeof GetBetting200DataItemMarketsStatus[keyof typeof GetBetting200DataItemMarketsStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBetting200DataItemMarketsStatus = {
  CANCELLED: 'CANCELLED',
  LOST: 'LOST',
  PENDING: 'PENDING',
  VOID: 'VOID',
  WON: 'WON',
} as const;

export type GetBetting200DataItemMarkets = {
  betId?: number;
  betOdd?: number;
  createdAt?: string;
  id?: number;
  oddId?: number;
  pick?: string;
  status?: GetBetting200DataItemMarketsStatus;
  updatedAt?: string;
};

export type GetBetting200DataItem = {
  amountPlaced?: number;
  createdAt?: string;
  date?: string;
  id?: number;
  markets?: GetBetting200DataItemMarkets;
  possibleWin?: number;
  status?: GetBetting200DataItemStatus;
  totalMarkets?: number;
  totalOdds?: number;
  updatedAt?: string;
  userId?: string;
};

export type GetBettingStatusItem = typeof GetBettingStatusItem[keyof typeof GetBettingStatusItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetBettingStatusItem = {
  WON: 'WON',
  LOST: 'LOST',
  VOID: 'VOID',
  PENDING: 'PENDING',
  CANCELLED: 'CANCELLED',
} as const;

export type GetBettingParams = {
from?: string;
to?: string;
status?: GetBettingStatusItem[];
};

/**
 * SuccessReponse
 */
export type PostBettingDefault = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type PostBetting500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostBetting404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostBetting403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type PostBetting401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type PostBetting400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * SuccessReponse
 */
export type PostBetting200 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type PostBettingBodyDataItem = {
  oddsId: number;
  pick: string;
};

export type PostBettingBody = {
  amount: number;
  data: PostBettingBodyDataItem[];
};

export type GetLeaguesIdDefaultData = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

/**
 * Default response
 */
export type GetLeaguesIdDefault = {
  data?: GetLeaguesIdDefaultData;
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type GetLeaguesId500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetLeaguesId404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetLeaguesId403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetLeaguesId401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetLeaguesId400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetLeaguesId200Data = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

/**
 * Default response
 */
export type GetLeaguesId200 = {
  data?: GetLeaguesId200Data;
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetLeaguesDefaultDataItem = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

/**
 * Default response
 */
export type GetLeaguesDefault = {
  data?: GetLeaguesDefaultDataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Server error
 */
export type GetLeagues500 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetLeagues404 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetLeagues403 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Not Authorized
 */
export type GetLeagues401 = {
  id?: number;
  message?: string;
  success?: boolean;
};

/**
 * Bad Request
 */
export type GetLeagues400 = {
  id?: number;
  message?: string;
  success?: boolean;
};

export type GetLeagues200DataItem = {
  country?: string;
  createdAt?: string;
  featured?: boolean;
  id?: number;
  leagueId?: number;
  logo?: string;
  marketId?: number;
  matches?: number;
  name?: string;
  season?: string;
  type?: string;
  updatedAt?: string;
};

/**
 * Default response
 */
export type GetLeagues200 = {
  data?: GetLeagues200DataItem[];
  id?: number;
  message?: string;
  success?: boolean;
};

